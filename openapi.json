{
  "openapi": "3.0.0",
  "info": {
    "description": "The API serves as the interface for APIs doc",
    "version": "1.0.0",
    "title": "FTRV Intranet Portal",
    "termsOfService": "",
    "contact": {
      "name": "Usman Qamar",
      "email": "usmanqamar189@hotmail.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "Localhost FTRV Intranet"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Information regarding a users of ftrv"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "An endpoint to create a user",
        "operationId": "createUsers",
        "requestBody": {
          "$ref": "#/components/requestBodies/User"
        },
        "responses": {
          "200": {
            "description": "Successful creation of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "get": {
        "summary": "Retrieve list of all user for given criteria",
        "tags": ["User"],
        "operationId": "getUserList",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Search string",
            "type": "string"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "department",
            "in": "query",
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "extension",
            "in": "query",
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieve user by id",
        "tags": ["User"],
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "An endpoint to update a user",
        "operationId": "updateUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/User"
        },
        "responses": {
          "200": {
            "description": "Successful update of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/users/deleteUsers": {
      "delete": {
        "tags": ["User"],
        "summary": "An endpoint to delete user(s)",
        "operationId": "deleteUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": ["ids"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful deletion of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "An endpoint to login",
        "operationId": "createUserSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful authentication of user credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input"
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/users/upload": {
      "post": {
        "tags": ["User"],
        "summary": "An endpoint to upload employee sheet",
        "operationId": "uploadUserList",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "base64"
                  }
                },
                "required": ["file"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Count of successful and failed user creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileUpload"
                }
              }
            }
          },
          "400": {
            "description": "No file found!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Only excel file uploads are allowed!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/birthday": {
      "get": {
        "summary": "An endpoint to get a upcoming birthdays",
        "tags": ["User"],
        "operationId": "getBirthday",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date for which we want to get birthdays",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blogs": {
      "post": {
        "tags": ["Blogs"],
        "summary": "An endpoint to create a blog",
        "operationId": "createBlogs",
        "requestBody": {
          "$ref": "#/components/requestBodies/Blog"
        },
        "responses": {
          "200": {
            "description": "Successful creation of blog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "get": {
        "summary": "Retrieve list of all blogs",
        "tags": ["Blogs"],
        "operationId": "getBlogList",
        "parameters": [
          {
            "name": "sortColumn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of blogs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blog"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Blogs"],
        "summary": "An endpoint to delete blog",
        "operationId": "deleteBlogs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                },
                "required": ["id"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful deletion of blogs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/blogs/{id}": {
      "get": {
        "summary": "Retrieve blog by id",
        "tags": ["Blogs"],
        "operationId": "getBlogById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of blog",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "put": {
        "tags": ["Blogs"],
        "summary": "An endpoint to update a blog",
        "operationId": "updateBlogs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of blog",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Blog"
        },
        "responses": {
          "200": {
            "description": "Successful update of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/events": {
      "get": {
        "summary": "Retrieve list of all events",
        "tags": ["Events"],
        "operationId": "getEventList",
        "parameters": [
          {
            "name": "sortColumn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Events"],
        "summary": "An endpoint to create an Event",
        "operationId": "createEvent",
        "requestBody": {
          "$ref": "#/components/requestBodies/Event"
        },
        "responses": {
          "200": {
            "description": "Successful creation of event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "422": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "delete": {
        "tags": ["Events"],
        "summary": "An endpoint to delete event",
        "operationId": "deleteEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": ["ids"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful deletion of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "summary": "Retrieve event by id",
        "tags": ["Events"],
        "operationId": "getEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Event",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "put": {
        "tags": ["Events"],
        "summary": "An endpoint to update an event",
        "operationId": "updateEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of event",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Event"
        },
        "responses": {
          "200": {
            "description": "Successful update of event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/announcements": {
      "post": {
        "tags": ["Announcement"],
        "summary": "An endpoint to create an Announcement",
        "operationId": "createAnnouncement",
        "requestBody": {
          "$ref": "#/components/requestBodies/Announcement"
        },
        "responses": {
          "200": {
            "description": "Successful creation of Announcement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Announcement"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "get": {
        "summary": "Retrieve list of all Announcements for given criteria",
        "tags": ["Announcement"],
        "operationId": "getAnnouncementsList",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Announcements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Announcement"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/announcements/{id}": {
      "get": {
        "summary": "Retrieve announcement by id",
        "tags": ["Announcement"],
        "operationId": "getAnnouncementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Announcement",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of announcement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Announcement"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "put": {
        "tags": ["Announcement"],
        "summary": "An endpoint to update an announcement",
        "operationId": "updateAnnouncement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of announcement",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Announcement"
        },
        "responses": {
          "200": {
            "description": "Successful update of announcement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Announcement"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/announcements/userAnnouncements": {
      "get": {
        "summary": "Retrieve list of all active announcement(s)",
        "tags": ["Announcement"],
        "operationId": "getUserAnnouncementList",
        "responses": {
          "200": {
            "description": "Array of Announcements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Announcement"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/announcements/deleteAnnouncements": {
      "delete": {
        "tags": ["Announcement"],
        "summary": "An endpoint to delete announcement(s)",
        "operationId": "deleteAnnouncements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": ["ids"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful deletion of announcement(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/linkCategories": {
      "get": {
        "summary": "Retrieve list of all useful link categories",
        "tags": ["UsefulLink Categories"],
        "operationId": "getLinksCategoryList",
        "responses": {
          "200": {
            "description": "Array of Useful Links Categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsefulLinkCategory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "An endpoint to create a useful link category",
        "tags": ["UsefulLink Categories"],
        "operationId": "createlinkCategory",
        "requestBody": {
          "$ref": "#/components/requestBodies/UsefulLinkCategory"
        },
        "responses": {
          "200": {
            "description": "Successful creation of link Category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsefulLinkCategory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/linkCategories/{id}": {
      "get": {
        "summary": "Retrieve link category by id",
        "tags": ["UsefulLink Categories"],
        "operationId": "getLinkCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of link category",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of link Category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsefulLinkCategory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "put": {
        "tags": ["UsefulLink Categories"],
        "summary": "An endpoint to update a link category",
        "operationId": "updateLinkCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of link category",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UsefulLinkCategory"
        },
        "responses": {
          "200": {
            "description": "Successful update of link category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsefulLinkCategory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "delete": {
        "tags": ["UsefulLink Categories"],
        "summary": "An endpoint to delete useful links category",
        "operationId": "deleteLinkCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of link category",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion of useful link category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/usefulLinks": {
      "post": {
        "tags": ["UsefulLink"],
        "summary": "An endpoint to create a useful link",
        "operationId": "createUseFulLink",
        "requestBody": {
          "$ref": "#/components/requestBodies/UsefulLink"
        },
        "responses": {
          "200": {
            "description": "Successful creation of useful link",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsefulLink"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "get": {
        "summary": "Retrieve list of all useful link for given criteria",
        "tags": ["UsefulLink"],
        "operationId": "getUsefulLinksList",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Useful Links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UsefulLink"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/usefulLinks/{id}": {
      "get": {
        "summary": "Retrieve useful link by id",
        "tags": ["UsefulLink"],
        "operationId": "getUsefulLinkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of link",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of useful link",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsefulLink"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "put": {
        "tags": ["UsefulLink"],
        "summary": "An endpoint to update a useful link",
        "operationId": "updateUsefulLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of useful link",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UsefulLink"
        },
        "responses": {
          "200": {
            "description": "Successful update of useful link",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsefulLink"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/usefulLinks/deleteLinks": {
      "delete": {
        "tags": ["UsefulLink"],
        "summary": "An endpoint to delete useful link(s)",
        "operationId": "deleteUsefulLinks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": ["ids"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful deletion of useful link(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/quote": {
      "put": {
        "tags": ["Quote"],
        "summary": "An endpoint to update a motivational quote",
        "operationId": "updateQuote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update of quote",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "get": {
        "summary": "An endpoint to get a motivational quote",
        "tags": ["Quote"],
        "operationId": "getQuote",
        "responses": {
          "200": {
            "description": "Object of quote",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/ceo": {
      "get": {
        "summary": "An endpoint to get CEO page avatar and content",
        "tags": ["Ceo"],
        "operationId": "getCeoPageContent",
        "responses": {
          "200": {
            "description": "Object containing CEO page content and avatar",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeoPage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Ceo"],
        "summary": "An endpoint to update CEO page avatar and content",
        "operationId": "updateCeoPageContent",
        "requestBody": {
          "$ref": "#/components/requestBodies/CeoPage"
        },
        "responses": {
          "200": {
            "description": "Successful update of CEO page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeoPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/bannerImage": {
      "get": {
        "summary": "An endpoint to get banner image",
        "tags": ["Banner Image"],
        "operationId": "getBannerImage",
        "responses": {
          "200": {
            "description": "Object containing banner image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerImage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Banner Image"],
        "summary": "An endpoint to update banner Image ",
        "operationId": "updateBannerImage",
        "requestBody": {
          "$ref": "#/components/requestBodies/BannerImage"
        },
        "responses": {
          "200": {
            "description": "Successful update of banner image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerImage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    },
    "/locations": {
      "post": {
        "tags": ["Locations"],
        "summary": "An endpoint to create a location",
        "operationId": "createLocations",
        "requestBody": {
          "$ref": "#/components/requestBodies/Location"
        },
        "responses": {
          "200": {
            "description": "Successful creation of location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "get": {
        "summary": "Retrieve list of all locations",
        "tags": ["Locations"],
        "operationId": "getLocationList",
        "parameters": [
          {
            "name": "sortColumn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "An endpoint to delete location",
        "operationId": "deleteLocations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                },
                "required": ["id"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful deletion of locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "summary": "Retrieve location by id",
        "tags": ["Locations"],
        "operationId": "getLocationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of location",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "An endpoint to update a location",
        "operationId": "updateLocations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of location",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Location"
        },
        "responses": {
          "200": {
            "description": "Successful update of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. An Expert authenticated session needs to be created"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Blog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "shortText": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",

        "properties": {
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "contactNo": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "joiningDate": {
            "type": "string",
            "format": "date"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Announcement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UsefulLink": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "categoryId": {
            "type": "number"
          }
        }
      },
      "UsefulLinkCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "linksCount": {
            "type": "number"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "fileUpload": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "CeoPage": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "BannerImage": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {
      "User": {
        "description": "Information about the Users of FTRV",
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "role": {
                  "type": "string",
                  "enum": ["user", "admin"]
                },
                "contactNo": {
                  "type": "string"
                },
                "extension": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "department": {
                  "type": "string"
                },
                "file": {
                  "type": "string",
                  "format": "binary"
                },
                "joiningDate": {
                  "type": "string",
                  "format": "date"
                },
                "dob": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        },
        "required": true
      },
      "UsefulLinkCategory": {
        "description": "Information about the Link Categories of FTRV",
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": true
      },
      "UsefulLink": {
        "description": "Information about the Useful Links of FTRV",
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "categoryId": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": true
      },
      "Announcement": {
        "description": "Information about the announcements of FTRV",
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string",
                  "format": "date"
                },
                "endTime": {
                  "type": "string",
                  "format": "date"
                },
                "status": {
                  "type": "string",
                  "enum": ["active", "inactive"]
                },
                "priority": {
                  "type": "string",
                  "enum": ["high", "medium", "low"]
                }
              }
            }
          }
        },
        "required": true
      },
      "Event": {
        "description": "Information about the company event of FTRV",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "required": true
      },
      "CeoPage": {
        "description": "Information about the CEO of FTRV",
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                },
                "file": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "required": true
      },
      "BannerImage": {
        "description": "Information about the banner of FTRV",
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "required": true
      },
      "Location": {
        "description": "Information about the locations of FTRV",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": true
      },
      "Blog": {
        "description": "Information about the Blogs of FTRV",
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "file": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "required": true
      }
    },
    "responses": {
      "User": {
        "description": "Information about the Users of FTRV",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "required": true
      },
      "UsefulLink": {
        "description": "Information about the useful links of FTRV",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UsefulLink"
            }
          }
        },
        "required": true
      },
      "CeoPage": {
        "description": "Information about the CEO of FTRV",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CeoPage"
            }
          }
        },
        "required": true
      },
      "bannerImagePage": {
        "description": "Information about the banner Image of FTRV",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BannerImage"
            }
          }
        },
        "required": true
      }
    }
  },
  "securitySchemes": {
    "bearerAuth": {
      "type": "http",
      "description": "",
      "scheme": "bearer",
      "name": "authorization",
      "bearerFormat": "JWT"
    }
  }
}
