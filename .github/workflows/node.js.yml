name: integration and building stage
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x]
    steps:
    - name: pull code
      uses: actions/checkout@v2      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }} 
    - name: continues integration 
      run: npm ci
    - name: testing the code
      run: npm test
    - name: building the code
      run: npm run build --if-present
      
  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: code checkout
        uses: actions/checkout@v1
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: image Build
        run: docker build -t node-app  .
      - name: Tags
        run: |
          docker tag node-app ${{ secrets.DOCKER_USER }}/node-app:${{ github.sha }}
          docker tag node-app ${{ secrets.DOCKER_USER }}/node-app:latest
      - name: Push
        run: |
          docker push ${{ secrets.DOCKER_USER }}/node-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USER }}/node-app:latest
  deploy:
    needs: cd
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
       - name: code checkout 
         uses: actions/checkout@v2
       - name: Executing remote  command
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.SSH_HOST }}
           username: ${{ secrets.SSH_USERNAME }}
           key: ${{ secrets.SSH_KEY }}
           port: ${{ secrets.SSH_PORT }} 
           script: whoami


